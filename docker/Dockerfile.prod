# Multi-stage build para produção
FROM maven:3.8.6-openjdk-17-slim AS builder

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de configuração do Maven
COPY chat2db-server/pom.xml ./chat2db-server/
COPY chat2db-server/*/pom.xml ./chat2db-server/*/

# Download das dependências (cache layer)
RUN cd chat2db-server && mvn dependency:go-offline -B

# Copiar código fonte
COPY chat2db-server ./chat2db-server

# Build da aplicação
RUN cd chat2db-server && mvn clean package -DskipTests -B

# Estágio final - imagem de produção
FROM openjdk:17-jre-slim

# Instalar dependências necessárias
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Criar usuário não-root para segurança
RUN groupadd -r chat2db && useradd -r -g chat2db chat2db

# Definir diretório de trabalho
WORKDIR /app

# Copiar JAR da aplicação do estágio builder
COPY --from=builder /app/chat2db-server/chat2db-server-web-start/target/chat2db-server-web-start.jar ./chat2db-server-web-start.jar

# Criar diretórios necessários
RUN mkdir -p /app/logs && chown -R chat2db:chat2db /app

# Mudar para usuário não-root
USER chat2db

# Expor porta
EXPOSE 10824

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:10824/api/system/get-version-a || exit 1

# Comando de inicialização
ENTRYPOINT ["java", \
    "-Dloader.path=lib", \
    "-Dspring.profiles.active=prod", \
    "-Xmx1536m", \
    "-Xms512m", \
    "-XX:+UseG1GC", \
    "-XX:+UseContainerSupport", \
    "-Djava.security.egd=file:/dev/./urandom", \
    "-jar", "chat2db-server-web-start.jar"]